/**
 * Dark Mode Overrides for ReactFlow Controls
 * 
 * ReactFlow's built-in controls don't automatically adapt to dark mode,
 * so we need to override their styles when the user has dark mode enabled.
 * 
 * Uses CSS custom properties to avoid duplication between media query
 * and VS Code class-based dark mode detection.
 */

/* Hide ReactFlow attribution (node count badge) in all modes */
.react-flow__attribution {
  display: none !important;
}

/* Define CSS custom properties for light mode (defaults) */
:root {
  --hydroscope-control-bg: #fefefe;
  --hydroscope-control-border: #b1b1b7;
  --hydroscope-control-text: #555;
  --hydroscope-control-hover-bg: #f0f0f0;
  --hydroscope-control-hover-border: #999;
  --hydroscope-minimap-bg: rgba(255, 255, 255, 0.95);
  --hydroscope-minimap-border: #e2e8f0;
  --hydroscope-minimap-node: rgba(100, 100, 100, 0.4);
  --hydroscope-minimap-mask: rgba(240, 240, 240, 0.8);
  --hydroscope-panel-bg: #ffffff;
  --hydroscope-panel-border: #eeeeee;
  --hydroscope-panel-text: #222222;
  --hydroscope-input-bg: #ffffff;
  --hydroscope-input-border: #ced4da;
  --hydroscope-selection: #3b82f6;
}

/* Dark mode custom properties - applied via media query */
@media (prefers-color-scheme: dark) {
  :root {
    --hydroscope-control-bg: #2a2a2a;
    --hydroscope-control-border: #4a4a4a;
    --hydroscope-control-text: #e0e0e0;
    --hydroscope-control-hover-bg: #3a3a3a;
    --hydroscope-control-hover-border: #5a5a5a;
    --hydroscope-minimap-bg: rgba(42, 42, 42, 0.95);
    --hydroscope-minimap-border: #4a4a4a;
    --hydroscope-minimap-node: rgba(200, 200, 200, 0.4);
    --hydroscope-minimap-mask: rgba(50, 50, 50, 0.8);
    --hydroscope-panel-bg: #1e1e1e;
    --hydroscope-panel-border: #3a3a3a;
    --hydroscope-panel-text: #e0e0e0;
    --hydroscope-input-bg: #2a2a2a;
    --hydroscope-input-border: #4a4a4a;
    --hydroscope-selection: #60a5fa;
  }
}

/* Dark mode custom properties - applied via VS Code class */
.vscode-dark,
.vscode-high-contrast {
  --hydroscope-control-bg: #2a2a2a;
  --hydroscope-control-border: #4a4a4a;
  --hydroscope-control-text: #e0e0e0;
  --hydroscope-control-hover-bg: #3a3a3a;
  --hydroscope-control-hover-border: #5a5a5a;
  --hydroscope-minimap-bg: rgba(42, 42, 42, 0.95);
  --hydroscope-minimap-border: #4a4a4a;
  --hydroscope-minimap-node: rgba(200, 200, 200, 0.4);
  --hydroscope-minimap-mask: rgba(50, 50, 50, 0.8);
  --hydroscope-panel-bg: #1e1e1e;
  --hydroscope-panel-border: #3a3a3a;
  --hydroscope-panel-text: #e0e0e0;
  --hydroscope-input-bg: #2a2a2a;
  --hydroscope-input-border: #4a4a4a;
  --hydroscope-selection: #60a5fa;
}

/* Apply custom properties to ReactFlow controls - single definition, works in all modes */
.react-flow
  .react-flow__panel
  .react-flow__controls
  .react-flow__controls-button,
.react-flow .react-flow__controls .react-flow__controls-button,
.react-flow__panel .react-flow__controls .react-flow__controls-button,
.react-flow__controls .react-flow__controls-button,
.react-flow__controls button {
  background-color: var(--hydroscope-control-bg) !important;
  border-color: var(--hydroscope-control-border) !important;
  color: var(--hydroscope-control-text) !important;
  fill: var(--hydroscope-control-text) !important;
}

.react-flow
  .react-flow__panel
  .react-flow__controls
  .react-flow__controls-button:hover,
.react-flow .react-flow__controls .react-flow__controls-button:hover,
.react-flow__panel .react-flow__controls .react-flow__controls-button:hover,
.react-flow__controls .react-flow__controls-button:hover,
.react-flow__controls button:hover {
  background-color: var(--hydroscope-control-hover-bg) !important;
  border-color: var(--hydroscope-control-hover-border) !important;
}

/* SVG icons inside buttons */
.react-flow .react-flow__controls .react-flow__controls-button svg,
.react-flow__controls .react-flow__controls-button svg,
.react-flow__controls button svg,
.react-flow__controls svg {
  fill: var(--hydroscope-control-text) !important;
  color: var(--hydroscope-control-text) !important;
}

/* SVG paths */
.react-flow .react-flow__controls .react-flow__controls-button svg path,
.react-flow__controls .react-flow__controls-button svg path,
.react-flow__controls .react-flow__controls-button path,
.react-flow__controls button path,
.react-flow__controls svg path {
  fill: var(--hydroscope-control-text) !important;
}

/* Custom control buttons (pack/unpack/autofit/load) */
div[style*="bottom: 125px"] button.react-flow__controls-button,
div[style*="bottom: 125px"] button {
  background-color: var(--hydroscope-control-bg) !important;
  border-color: var(--hydroscope-control-border) !important;
  color: var(--hydroscope-control-text) !important;
}

div[style*="bottom: 125px"] button.react-flow__controls-button:hover,
div[style*="bottom: 125px"] button:hover {
  background-color: var(--hydroscope-control-hover-bg) !important;
  border-color: var(--hydroscope-control-hover-border) !important;
}

div[style*="bottom: 125px"] button svg,
div[style*="bottom: 125px"] button svg path {
  fill: var(--hydroscope-control-text) !important;
  color: var(--hydroscope-control-text) !important;
}

/* MiniMap */
.react-flow__minimap {
  background-color: var(--hydroscope-minimap-bg) !important;
  border: 1px solid var(--hydroscope-minimap-border) !important;
}

.react-flow__minimap-node {
  fill: var(--hydroscope-minimap-node) !important;
}

.react-flow__minimap-mask {
  fill: var(--hydroscope-minimap-mask) !important;
}

/* ReactFlow node selection */
.react-flow__node.selected {
  box-shadow: 0 0 0 2px var(--hydroscope-selection) !important;
}

/* ReactFlow edge selection */
.react-flow__edge.selected .react-flow__edge-path {
  stroke: var(--hydroscope-selection) !important;
}
